import{_ as e,o as s,c as i,R as t}from"./chunks/framework.6gCNz0yi.js";const g=JSON.parse('{"title":"EdgeRule","description":"","frontmatter":{},"headers":[],"relativePath":"src/components/styles/StyleRule.md","filePath":"src/components/styles/StyleRule.md"}'),a={name:"src/components/styles/StyleRule.md"},l=t(`<h1 id="edgerule" tabindex="-1">EdgeRule <a class="header-anchor" href="#edgerule" aria-label="Permalink to &quot;EdgeRule&quot;">​</a></h1><p>Creates a <a href="https://doc.linkurious.com/ogma/latest/api.html#Ogma-styles-addRule" target="_blank" rel="noreferrer">style rule</a> for nodes and edges. It has more options than <a href="./NodeRule.html">NodeRule</a> and <a href="./EdgeRule.html">EdgeRule</a>.</p><h2 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h2><h3 id="nodeattributes" tabindex="-1">nodeAttributes <a class="header-anchor" href="#nodeattributes" aria-label="Permalink to &quot;nodeAttributes&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#NodeAttributes" target="_blank" rel="noreferrer"><code>nodeAttributes</code></a></p></li><li><p>default: <code>{}</code></p><p>The attributes to apply to the nodes.</p></li></ul><h3 id="edgeattributes" tabindex="-1">edgeAttributes <a class="header-anchor" href="#edgeattributes" aria-label="Permalink to &quot;edgeAttributes&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#EdgeAttributes" target="_blank" rel="noreferrer"><code>edgeAttributes</code></a></p></li><li><p>default: <code>{}</code></p><p>The attributes to apply to the edges.</p></li></ul><h3 id="edgeselector" tabindex="-1">edgeSelector <a class="header-anchor" href="#edgeselector" aria-label="Permalink to &quot;edgeSelector&quot;">​</a></h3><ul><li><p>type: <code>(edge: </code><a href="https://doc.linkurious.com/ogma/latest/api.html#Edge" target="_blank" rel="noreferrer">Edge</a><code>) =&gt; Boolean</code></p></li><li><p>default: <code>() =&gt; true</code></p><p>The selector function to apply to the edges.</p></li></ul><h3 id="nodeselector" tabindex="-1">nodeSelector <a class="header-anchor" href="#nodeselector" aria-label="Permalink to &quot;nodeSelector&quot;">​</a></h3><ul><li><p>type: <code>(node: </code><a href="https://doc.linkurious.com/ogma/latest/api.html#Node" target="_blank" rel="noreferrer">Node</a><code>) =&gt; Boolean</code></p></li><li><p>default: <code>() =&gt; true</code></p><p>The selector function to apply to the nodes.</p></li></ul><h3 id="edgedependencies" tabindex="-1">edgeDependencies <a class="header-anchor" href="#edgedependencies" aria-label="Permalink to &quot;edgeDependencies&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#EdgeDependencies" target="_blank" rel="noreferrer"><code>EdgeDependency</code></a></p></li><li><p>default: <code>{}</code></p><p>The dependencies to on which the rule is update (datachange, extremities change etc). See <a href="https://doc.linkurious.com/ogma/latest/tutorials/styling-optimization/" target="_blank" rel="noreferrer">tutorial</a></p></li></ul><h3 id="nodedependencies" tabindex="-1">nodeDependencies <a class="header-anchor" href="#nodedependencies" aria-label="Permalink to &quot;nodeDependencies&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#NodeDependencies" target="_blank" rel="noreferrer"><code>NodeDependency</code></a></p></li><li><p>default: <code>{}</code></p><p>The dependencies to on which the rule is update (datachange, extremities change etc). See <a href="https://doc.linkurious.com/ogma/latest/tutorials/styling-optimization/" target="_blank" rel="noreferrer">tutorial</a></p></li></ul><h3 id="edgeoutput" tabindex="-1">edgeOutput <a class="header-anchor" href="#edgeoutput" aria-label="Permalink to &quot;edgeOutput&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#EdgeOutput" target="_blank" rel="noreferrer"><code>EdgeOutput</code></a></p></li><li><p>default: <code>{}</code></p><p>Edge attributes assigned by the rule. If unspecified, they are inferred from the <code>edgeAttributes</code> field. See <a href="https://doc.linkurious.com/ogma/latest/tutorials/styling-optimization/" target="_blank" rel="noreferrer">tutorial</a></p></li></ul><h3 id="nodeoutput" tabindex="-1">nodeOutput <a class="header-anchor" href="#nodeoutput" aria-label="Permalink to &quot;nodeOutput&quot;">​</a></h3><ul><li><p>type: <a href="https://doc.linkurious.com/ogma/latest/api.html#NodeOutput" target="_blank" rel="noreferrer"><code>NodeOutput</code></a></p></li><li><p>default: <code>{}</code></p><p>Node attributes assigned by the rule. If unspecified, they are inferred from the <code>nodeAttributes</code> field. See <a href="https://doc.linkurious.com/ogma/latest/tutorials/styling-optimization/" target="_blank" rel="noreferrer">tutorial</a></p></li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">StyleRule</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    :nodeSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rule.nodeSelector&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    :nodeAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rule.nodeAttributes&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    :edgeSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rule.edgeSelector&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    :edgeAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rule.edgeAttributes&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setup</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { StyleRule, StyleRuleProps } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@linkurious/ogma-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StyleRuleProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  nodeAttributes: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  nodeSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  edgeAttributes: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  edgeSelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,21),n=[l];function r(p,h,o,d,k,u){return s(),i("div",null,n)}const E=e(a,[["render",r]]);export{g as __pageData,E as default};
