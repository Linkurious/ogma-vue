import{r as p,o as l,c,a as s,b as a,w as r,F as u,d as n,e}from"./app.b641a454.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=s("h1",{id:"home",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#home","aria-hidden":"true"},"#"),n(" Home")],-1),b=n("Ogma Vue 3 is a full integration of "),m={href:"https://doc.linkurio.us/ogma/latest/",target:"_blank",rel:"noopener noreferrer"},g=n("Ogma"),h=n(" in Vue.js."),v=s("h3",{id:"getting-started",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),n(" Getting started.")],-1),_=n("First, you need to own a valid "),f=s("strong",null,"Ogma",-1),y=n(" licence. Reach out "),q={href:"https://doc.linkurio.us/ogma/latest/support.html",target:"_blank",rel:"noopener noreferrer"},w=n("Ogma sales"),x=n(" for more details. Let's say you start from scratch:"),O=e(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue create my-vue-ogma-app
<span class="token builtin class-name">cd</span> my-vue-ogma-app
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="install-ogma-and-ogma-vue3" tabindex="-1"><a class="header-anchor" href="#install-ogma-and-ogma-vue3" aria-hidden="true">#</a> Install Ogma and Ogma-vue3</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i @linkurious/ogma @linkurious/ogma-vue
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="use-ogma-vue3-in-your-app" tabindex="-1"><a class="header-anchor" href="#use-ogma-vue3-in-your-app" aria-hidden="true">#</a> Use Ogma-vue3 in your App</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    ...Your App
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OgmaVue</span>
      <span class="token attr-name">:ogma</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ogma<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:graph</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>graph<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>height<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> Ogma <span class="token keyword">as</span> Ogmavue<span class="token punctuation">,</span> StyleRule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@linkurious/ogma-vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Ogma <span class="token keyword">from</span> <span class="token string">&quot;@linkurious/ogma&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ogma <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Ogma</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;App&quot;</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      ogma<span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">512</span><span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">512</span><span class="token punctuation">,</span>
      <span class="token literal-property property">graph</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,5),N=n("That's it ! You have a fully functionnal Ogma instance within your app. To go further, we encourage you reading the "),S=n("components"),I=n(" section to see how to add transformations, styles and more. You should check out as well the "),j=s("a",{href:""},"Events",-1),R=n(" section See the Components documentation to see how you can add style rules,"),A=e(`<h3 id="register-to-events" tabindex="-1"><a class="header-anchor" href="#register-to-events" aria-hidden="true">#</a> Register to events</h3><p>You might want to use vue <code>@</code> syntax to register to Ogma events. You can. By default, <code>OgmaVue</code> will emit all events sent by <code>Ogma</code>. You can then write</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OgmaVue</span>
      <span class="token attr-name">...props</span>
      <span class="token attr-name">:@addNodes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onAddNodes<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>If you want to optimize performances, you can pass as a prop the list of events you want to register to:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OgmaVue</span>
      <span class="token attr-name">...props</span>
      <span class="token attr-name">:events</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[addNodes, addEdges]<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:@addNodes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onAddNodes<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:@addEdges</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onAddEdges<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,5),C=n("See "),E={href:"https://doc.linkurio.us/ogma/latest/api.html#Event:-addEdges",target:"_blank",rel:"noopener noreferrer"},F=n("Ogma events API"),L=n(" for further details."),P=e(`<p>Tranformations for instance trigger <code>enabled</code> <code>disabled</code>, <code>indexChanged</code>, <code>refreshed</code> and <code>destroyed</code>.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NodeFilter</span>
      <span class="token attr-name">...props</span>
      <span class="token attr-name">:@refreshed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onFilterRefreshed<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>As for <code>Ogma</code> component, by default it will register and emit <code>all</code> events, but you can specify which ones you want to register to:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NodeFilter</span>
      <span class="token attr-name">...props</span>
      <span class="token attr-name">:events</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[refreshed]<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:@refreshed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onFilterRefreshed<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,4),V=n("See "),T={href:"https://doc.linkurio.us/ogma/latest/api.html#Event:-transformationDestroyed",target:"_blank",rel:"noopener noreferrer"},U=n("Ogma transformations events"),Y=n(" for further details."),G=e(`<h3 id="setting-styles" tabindex="-1"><a class="header-anchor" href="#setting-styles" aria-hidden="true">#</a> Setting styles</h3><p>Ogma provides a variety of APIs to add styles to your graph: <code>Classes</code>, <code>EdgeRule</code>, <code>NodeRule</code> and <code>StyleRule</code>.</p><p>Let&#39;s see how we can use them.</p><h4 id="styleclass" tabindex="-1"><a class="header-anchor" href="#styleclass" aria-hidden="true">#</a> StyleClass</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StyleClass</span>
      <span class="token attr-name">:nodes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nodes<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:edges</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>edges<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">nodes</span><span class="token operator">:</span> ogma<span class="token punctuation">.</span><span class="token function">getNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token comment">// let&#39;s say we don&#39;t want to apply the class to any edge</span>
      <span class="token literal-property property">edges</span><span class="token operator">:</span> ogma<span class="token punctuation">.</span><span class="token function">edgeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;my super class&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">nodeAttributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span>  <span class="token operator">?</span> <span class="token string">&quot;green&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span>
        <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,6),B=n("See "),X=s("a",{href:"src/components/styles/StyleClass"},"component reference",-1),D=n(" and "),z={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-styles-createClass",target:"_blank",rel:"noopener noreferrer"},H=n("createClass API"),M=n(" for more details."),J=e(`<h4 id="edgerule" tabindex="-1"><a class="header-anchor" href="#edgerule" aria-hidden="true">#</a> EdgeRule</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EdgeRule</span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">selector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">rule</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token function-variable function">color</span><span class="token operator">:</span> <span class="token parameter">edge</span> <span class="token operator">=&gt;</span> edge<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;green&#39;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,3),K=n("See "),Q=s("a",{href:"src/components/styles/EdgeRule"},"component reference",-1),W=n(" and "),Z={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-styles-addEdgeRule",target:"_blank",rel:"noopener noreferrer"},$=n("createClass API"),nn=n(" for more details."),sn=e(`<h4 id="noderule" tabindex="-1"><a class="header-anchor" href="#noderule" aria-hidden="true">#</a> NodeRule</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NodeRule</span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">selector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">rule</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
          <span class="token function-variable function">color</span><span class="token operator">:</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;green&#39;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,3),an=n("See "),tn=s("a",{href:"src/components/styles/NodeRule"},"component reference",-1),en=n(" and "),pn={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-styles-addNodeRule",target:"_blank",rel:"noopener noreferrer"},on=n("createClass API"),ln=n(" for more details."),cn=e(`<h4 id="stylerule" tabindex="-1"><a class="header-anchor" href="#stylerule" aria-hidden="true">#</a> StyleRule</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StyleRule</span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>options<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">edgeSelector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token function-variable function">nodeSelector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">edgeAttributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token function-variable function">color</span><span class="token operator">:</span> <span class="token parameter">edge</span> <span class="token operator">=&gt;</span> edge<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;green&#39;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">nodeAttributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
          <span class="token function-variable function">color</span><span class="token operator">:</span> <span class="token parameter">node</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token string">&#39;blue&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;green&#39;</span> 
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,3),rn=n("See "),un=s("a",{href:"src/components/styles/StyleRule"},"component reference",-1),kn=n(" and "),dn={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-styles-addRule",target:"_blank",rel:"noopener noreferrer"},bn=n("createClass API"),mn=n(" for more details."),gn=e(`<h3 id="using-tranformations" tabindex="-1"><a class="header-anchor" href="#using-tranformations" aria-hidden="true">#</a> Using tranformations</h3><p>Adding tranformations in Ogma is easy, it allows you to filter, group nodes and edges, and do many more things.</p><p>Let&#39;s have a look at the transformations you will most likelly use:</p><h4 id="node-grouping" tabindex="-1"><a class="header-anchor" href="#node-grouping" aria-hidden="true">#</a> Node Grouping</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NodeGrouping</span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>groupingOptions<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">groupingOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token function-variable function">nodeSelector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
        <span class="token function-variable function">groupIdFunction</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token literal-property property">showContents</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,6),hn=n("See "),vn=s("a",{href:"src/components/transformations/NodeGrouping"},"component reference",-1),_n=n(" and "),fn={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-transformations-addNodeGrouping",target:"_blank",rel:"noopener noreferrer"},yn=n("addNodeGrouping API"),qn=n(" for more details."),wn=e(`<h4 id="node-filter" tabindex="-1"><a class="header-anchor" href="#node-filter" aria-hidden="true">#</a> Node Filter</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NodeFilter</span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>filterOptions<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">filterOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token function-variable function">criteria</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,3),xn=n("See "),On=s("a",{href:"src/components/transformations/NodeFilter"},"component reference",-1),Nn=n(" and "),Sn={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-transformations-addNodeFilter",target:"_blank",rel:"noopener noreferrer"},In=n("addNodeFilter API"),jn=n(" for more details."),Rn=s("h4",{id:"advices-on-tranformations",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#advices-on-tranformations","aria-hidden":"true"},"#"),n(" Advices on tranformations")],-1),An=s("li",null,[n("Do not use conditional rendering to enable/disable your transformation, use the "),s("code",null,"enabled"),n(" prop instead.")],-1),Cn=n("Check out Ogma "),En={href:"https://doc.linkurio.us/ogma/latest/examples/filter-nodes.html",target:"_blank",rel:"noopener noreferrer"},Fn=n("examples"),Ln=n(" and read the Ogma "),Pn={href:"https://doc.linkurio.us/ogma/latest/tutorials/grouping/index.html",target:"_blank",rel:"noopener noreferrer"},Vn=n("grouping tutorial"),Tn=n("."),Un=s("li",null,[n("To layout the graph properly after a transformation has run, you can register to "),s("code",null,"@refreshed"),n(" events.")],-1),Yn=s("li",null,"The functions are not reactive because Ogma does not allow it. It will be fixed in a further version. In the meanwhile, just keep the same function and modify its behaviour if needed.",-1),Gn=e(`<h3 id="using-tools" tabindex="-1"><a class="header-anchor" href="#using-tools" aria-hidden="true">#</a> Using Tools</h3><p>Ogma provides different tools to interract with the graph. You can use thoose tools simply by adding componenents to your app.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Lasso</span>
      <span class="token attr-name">:enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enabled<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lassoOptions<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,3),Bn=n("See "),Xn=s("a",{href:"src/components/tools/Lasso"},"component reference",-1),Dn=n(" and "),zn={href:"https://doc.linkurio.us/ogma/latest/api.html#Ogma-tools-lasso",target:"_blank",rel:"noopener noreferrer"},Hn=n("lasso API"),Mn=n(" for more details."),Jn=e(`<h3 id="custom-components" tabindex="-1"><a class="header-anchor" href="#custom-components" aria-hidden="true">#</a> Custom components</h3><p>Ogma vue uses <code>provide</code>/<code>inject</code> to pass on Ogma instance to the elements in its slots. This means you can write things like this:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    My super UX
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StyleRule</span> <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rule<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> StyleRule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@linkurious/ogma-vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> provide <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;UX&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ogma&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&quot;ogma&quot;</span><span class="token punctuation">,</span> props<span class="token punctuation">.</span>ogma<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">rule</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">nodeSelector</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">nodeAttributes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    StyleRule<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>It allows you to use composition API, create UI/UX which contains the styles or transformations it handles.</p>`,4);function Kn(Qn,Wn){const t=p("ExternalLinkIcon"),o=p("RouterLink");return l(),c(u,null,[d,s("p",null,[b,s("a",m,[g,a(t)]),h]),v,s("p",null,[_,f,y,s("a",q,[w,a(t)]),x]),O,s("p",null,[N,a(o,{to:"/components/Ogma.html"},{default:r(()=>[S]),_:1}),I,j,R]),A,s("p",null,[C,s("a",E,[F,a(t)]),L]),P,s("p",null,[V,s("a",T,[U,a(t)]),Y]),G,s("p",null,[B,X,D,s("a",z,[H,a(t)]),M]),J,s("p",null,[K,Q,W,s("a",Z,[$,a(t)]),nn]),sn,s("p",null,[an,tn,en,s("a",pn,[on,a(t)]),ln]),cn,s("p",null,[rn,un,kn,s("a",dn,[bn,a(t)]),mn]),gn,s("p",null,[hn,vn,_n,s("a",fn,[yn,a(t)]),qn]),wn,s("p",null,[xn,On,Nn,s("a",Sn,[In,a(t)]),jn]),Rn,s("ul",null,[An,s("li",null,[Cn,s("a",En,[Fn,a(t)]),Ln,s("a",Pn,[Vn,a(t)]),Tn]),Un,Yn]),Gn,s("p",null,[Bn,Xn,Dn,s("a",zn,[Hn,a(t)]),Mn]),Jn],64)}var ns=i(k,[["render",Kn]]);export{ns as default};
